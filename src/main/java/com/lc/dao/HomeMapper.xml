<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lc.dao.HomeMapper">
  <resultMap id="BaseResultMap" type="com.lc.entity.Home">
    <id column="userid" jdbcType="BIGINT" property="userid" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="grade" jdbcType="INTEGER" property="grade" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="role" jdbcType="INTEGER" property="role" />
    <result column="self_introduction" jdbcType="VARCHAR" property="selfIntroduction" />
  </resultMap>
  <sql id="Base_Column_List">
    userid, nickname, grade, phone, email, avatar, role, self_introduction
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from lc_home
    where userid = #{userid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from lc_home
    where userid = #{userid,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.lc.entity.Home">
    insert into lc_home (userid, nickname, grade, 
      phone, email, avatar, 
      role, self_introduction)
    values (#{userid,jdbcType=BIGINT}, #{nickname,jdbcType=VARCHAR}, #{grade,jdbcType=INTEGER}, 
      #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}, 
      #{role,jdbcType=INTEGER}, #{selfIntroduction,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.lc.entity.Home">
    insert into lc_home
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        userid,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="role != null">
        role,
      </if>
      <if test="selfIntroduction != null">
        self_introduction,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=BIGINT},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        #{role,jdbcType=INTEGER},
      </if>
      <if test="selfIntroduction != null">
        #{selfIntroduction,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lc.entity.Home">
    update lc_home
    <set>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        grade = #{grade,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        role = #{role,jdbcType=INTEGER},
      </if>
      <if test="selfIntroduction != null">
        self_introduction = #{selfIntroduction,jdbcType=VARCHAR},
      </if>
    </set>
    where userid = #{userid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lc.entity.Home">
    update lc_home
    set nickname = #{nickname,jdbcType=VARCHAR},
      grade = #{grade,jdbcType=INTEGER},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      role = #{role,jdbcType=INTEGER},
      self_introduction = #{selfIntroduction,jdbcType=VARCHAR}
    where userid = #{userid,jdbcType=BIGINT}
  </update>
</mapper>